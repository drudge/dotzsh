source $HOME/.zsh/functions/is-true

precmd() {
  ## Git info in the prompt
  if [ -d "$PWD/.git" ]; then
    export BRANCH=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
    export REV=$(git describe --tags --always $1 2>/dev/null || git rev-parse --short $1 2>/dev/null)
    export CHANGES=" "
    
    local st="$(git status 2>/dev/null)"
    
    if [[ ! $st =~ 'nothing to commit' ]]; then
        if [[ ! $st =~ 'no changes added to commit' ]]; then
          CHANGES="⚑ "
        else
          CHANGES="⚐ "
        fi
    fi
  else
    export BRANCH=""
    export REV=""
    export CHANGES="  "
  fi

  if [ $HOME = $PWD ]; then
    newPWD="~"
  else
    newPWD=${PWD:t}
  fi

  ROOTSTRING=""

  if [ $USER = "root" ]; then
    ROOTSTRING="%{$fg_bold[red]%}★ %{$reset_color%}"
  fi

  title "" "%m: %55<...<%~"
  export PS1="$ROOTSTRING%{$fg[white]%}%m%{$reset_color%}:%{$fg[magenta]%} $newPWD%{$reset_color%}> "

  if [ -n "$BRANCH" ]; then
    export RPROMPT="%{$fg[white]%}$CHANGES%{$reset_color%}%{$fg[white]%}(%{$reset_color%}%{$fg[green]%}$BRANCH%{$reset_color%}:%{$fg[yellow]%}$REV%{$reset_color%}%)%{$reset_color%}"
  else
    export RPROMPT=""
  fi

  # Sets the tab and window titles before the prompt is displayed.
  if [[ "$TERM_PROGRAM" != "Apple_Terminal" ]] && is-true "$AUTO_TITLE"; then
    set-window-title "${(%):-%~}"
    for kind in tab screen; do
      # Left-truncate the current working directory to 15 characters.
      set-${kind}-title "${(%):-%15<...<%~%<<}"
    done
  else
    # Set Apple Terminal current working directory.
    printf '\e]7;%s\a' "file://$HOST${PWD// /%20}"
  fi
}